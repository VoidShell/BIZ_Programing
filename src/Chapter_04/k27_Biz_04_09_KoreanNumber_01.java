package Chapter_04;

public class k27_Biz_04_09_KoreanNumber_01 {
    public static void main(String[] args) {
        // k27_units 배열에 한자리 한글 문자를 초기화한다.
        String[] k27_units = {"영", "일", "이", "삼", "사", "오", "육", "칠", "팔", "구"};
        // 예제로 100번을 돌려본다. k27_i이 for문에서 증가하면서 숫자 증가 역할을 한다.
        for (int k27_i = 0; k27_i < 101; k27_i++) {
            // 만약 k27_i 일의 자리일 때는 k27_units[k27_i] 그대로 출력.
            if (0 <= k27_i && k27_i < 10) {
                System.out.printf("일의 자리 : %s\n", k27_units[k27_i]);
                // 다른 조건으로 10 ~ 99까지이면
            } else if (10 <= k27_i && k27_i < 100) {
                // 십의 자리와 일의자리를 판별하는 k27_i10, k27_i0 변수를 선언한다.
                int k27_i10, k27_i0;
                // 10으로 나누면 몫이 나오고 k27_i10이 십의 자리 숫자가 된다.
                k27_i10 = k27_i / 10;
                // 10으로 % 연산을 하면 나머지가 나오고 k27_i0가 일의 자리 숫자가 된다.
                k27_i0 = k27_i % 10;
                if (k27_i0 == 0) {
                    // k27_i0 == 0: 나머지가 0, 십의 자리만 출력하면 된다. 한자리 한글문자에 '십'이라는 단어 추가.
                    // k27_i10가 십의 자리 숫자이고 이 숫자를 k27_units의 순번으로 집어넣으면 해당 한글 문자가 된다.
                    System.out.printf("십의 자리 : %s십\n", k27_units[k27_i10]);
                } else {
                    // k27_i0 != 0: 나머지가 있으면 일의자리까지 출력되어야 한다.
                    // k27_i10가 십의 자리 숫자이고 이 숫자를 k27_units의 순번으로 집어넣으면 해당 한글 문자가 된다.
                    // k27_i0가 나머지이고 이 숫자를 k27_units의 순번으로 집어넣으면 해당 한글 문자가 된다.
                    // k27_units[k27_i10]과 k27_units[k27_i0] 사이에 '십' 단어 추가.
                    System.out.printf("십의 자리 : %s십%s\n", k27_units[k27_i10], k27_units[k27_i0]);
                    // 일의 자리도 출력해야 하기 때문에 %s십%s로 해준다.
                }
            } else {
                // k27_i이 100번째 순번일때는 100 출력.
                System.out.printf("==> %d\n", k27_i);

            }
        }
    }
}
